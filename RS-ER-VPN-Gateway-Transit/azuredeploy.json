{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "VmAdminUsername": {
            "type": "string"
        },
        "VmAdminPassword": {
            "type": "secureString"
        },
        "Restrict_SSH_VM_AccessByPublicIP": {
            "type": "string",
            "defaultValue": "*",
            "metadata": {
                "description": "Default is any source Public IP (*). To restric access, please specify your CIDR. For single IP add 1.1.1.1/32."
            }
        },
        "sharedKey": {
            "type": "securestring",
            "metadata": {
                "description": "The shared key used to establish connection between the two vNet Gateways."
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "VpnGw1",
            "allowedValues": [
                "VpnGw1",
                "VpnGw2",
                "VpnGw3",
                "VpnGw4",
                "VpnGw5"
            ],
            "metadata": {
                "description": "The SKU for the VPN Gateway. Cannot be Basic SKU."
            }
        },
        "vpnGatewayGeneration": {
            "type": "string",
            "defaultValue": "Generation1",
            "allowedValues": [
                "Generation1",
                "Generation2"
            ],
            "metadata": {
                "description": "Select VPn Gateway Generation."
            }
        },
        "expressRouteCircuitID": {
            "type": "String",
            "metadata": {
                "description": "Specify ExpressRoute Circuit Resource ID"
            }
        },
        "UseAutorizationKey": {
            "type": "String",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "metadata": {
                "description": "Select Yes or Not for ExpressRoute Authorization Key"
            }
        },
        "AutorizationKey": {
            "type": "string",
            "defaultValue": "null",
            "metadata": {
                "description": "Add your ExpressRoute Authorization Key in case you have answered Yes on Use Authorization Key"
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location of the resources"
            },
            "defaultValue": "[resourceGroup().location]"
        }
    },
    "variables": {
        "nsgname": "Default-NSG",
        "artifactsLocation": "https://raw.githubusercontent.com/dmauser/Lab/master/RS-ER-VPN-Gateway-Transit/linked/",
        "erconnURI": "[concat(uri(variables('artifactsLocation'),'erconnection.json'))]",
        "ergwtemplateURI": "[concat(uri(variables('artifactsLocation'),'ergw.json'))]",
        "nsgtemplateURI": "[concat(uri(variables('artifactsLocation'),'nsg.json'))]",
        "onpremvnettemplateURI": "[concat(uri(variables('artifactsLocation'),'vnet-onprem.json'))]",
        "azurevnettemplateURI": "[concat(uri(variables('artifactsLocation'),'vnet-azure.json'))]",
        "spokevnettemplateURI": "[concat(uri(variables('artifactsLocation'),'vnet-spoke.json'))]",
        "vpngwtemplateURI": "[concat(uri(variables('artifactsLocation'),'vpngw.json'))]",
        "aavpngwtemplateURI": "[concat(uri(variables('artifactsLocation'),'aa-vpngw.json'))]",
        "vpnconnURI": "[concat(uri(variables('artifactsLocation'),'vpnconnection.json'))]",
        "routeServerURI": "[concat(uri(variables('artifactsLocation'),'routeserver.json'))]",
        "vmtemplateURI": "[concat(uri(variables('artifactsLocation'),'vm.json'))]",
        "vnetpeeringURI": "[concat(uri(variables('artifactsLocation'),'vnet-peering.json'))]",
        "OnPrem": {
            "name": "OnPrem",
            "addressSpacePrefix": "192.168.101.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "192.168.101.0/25",
            "gatewayName": "OnPrem-vpngw",
            "gatewaySubnetPrefix": "192.168.101.128/27",
            "gatewayPublicIPName": "OnPrem-Gateway-pip",
            "connectionName": "OnPrem-to-Azure",
            "asn": "65002"
        },
        "Azure": {
            "name": "Azure-Hub",
            "addressSpacePrefix": "10.0.1.0/24",
            "subnetName": "subnet1",
            "subnetPrefix": "10.0.1.0/27",
            "trustedPrefix": "10.0.1.32/27",
            "untrustedPrefix": "10.0.1.64/27",
            "gatewaySubnetPrefix": "10.0.1.96/27",
            "rssubnetPrefix": "10.0.1.128/27",
            "gatewayName": "Azure-vpngw",
            "ergatewayName": "Azure-ergw",
            "gatewayPublicIPName1": "Azure-Gateway-pip1",
            "gatewayPublicIPName2": "Azure-Gateway-pip2",
            "connectionName": "Azure-to-OnPrem",
            "asn": "65515",
            "routeserverName": "Azure-RS",
            "routeserverSubnetName": "RouteServerSubnet",
            "spoke1": "Azure-Spoke1",
            "spoke1addressSpacePrefix": "10.0.2.0/24",
            "spoke1subnetName": "subnet1",
            "spoke1subnetPrefix": "10.0.2.0/27",
            "spoke2": "Azure-Spoke2",
            "spoke2addressSpacePrefix": "10.0.3.0/24",
            "spoke2subnetName": "subnet1",
            "spoke2subnetPrefix": "10.0.3.0/27"
        }
    },
    "resources": [
        {
            "name": "NSG",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[variables('nsgname')]"
                    },
                    "RestrictSshAccessByPublicIP": {
                        "value": "[parameters('Restrict_SSH_VM_AccessByPublicIP')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('OnPrem').name,'-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('onpremvnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {}

            }
        },
        {
            "name": "[concat(variables('Azure').name, '-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('azurevnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {}

            }
        },
        {
            "name": "[concat(variables('Azure').spoke1, '-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('spokevnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[variables('Azure').spoke1]"
                    },
                    "addressSpacePrefix": {
                        "value": "[variables('Azure').spoke1addressSpacePrefix]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke1subnetName]"
                    },
                    "subnetPrefix": {
                        "value": "[variables('Azure').spoke1subnetPrefix]"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('Azure').spoke2, '-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('spokevnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[variables('Azure').spoke2]"
                    },
                    "addressSpacePrefix": {
                        "value": "[variables('Azure').spoke2addressSpacePrefix]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke2subnetName]"
                    },
                    "subnetPrefix": {
                        "value": "[variables('Azure').spoke2subnetPrefix]"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('Azure').spoke1, '-to-HUB-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Spoke1-to-Hub"
                    },
                    "hubNetwork": {
                        "value": "[concat(variables('Azure').name,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(variables('Azure').spoke1,'-vnet')]"
                    },
                    "direction": {
                        "value": "SpoketoHub"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('Azure').spoke2, '-to-HUB-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Spoke2-to-Hub"
                    },
                    "hubNetwork": {
                        "value": "[concat(variables('Azure').name,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(variables('Azure').spoke2,'-vnet')]"
                    },
                    "direction": {
                        "value": "SpoketoHub"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('Azure').name, '-to-Spoke1-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Hub-to-Spoke1"
                    },
                    "hubNetwork": {
                        "value": "[concat(variables('Azure').name,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(variables('Azure').spoke1,'-vnet')]"
                    },
                    "direction": {
                        "value": "HubToSpoke"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('Azure').name, '-to-Spoke2-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Hub-to-Spoke2"
                    },
                    "hubNetwork": {
                        "value": "[concat(variables('Azure').name,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(variables('Azure').spoke2,'-vnet')]"
                    },
                    "direction": {
                        "value": "HubToSpoke"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('OnPrem').gatewayName,'-vng')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('OnPrem').name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vpngwtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "gatewayName": {
                        "value": "[variables('OnPrem').gatewayName]"
                    },
                    "gatewaySku": {
                        "value": "[parameters('gatewaySku')]"
                    },
                    "vpnGatewayGeneration": {
                        "value": "[parameters('vpnGatewayGeneration')]"
                    },
                    "asn": {
                        "value": "[variables('OnPrem').asn]"
                    },
                    "vnetName": {
                        "value": "[concat(variables('OnPrem').name, '-vnet')]"
                    }
                }

            }
        },
        {
            "name": "[concat(variables('Azure').gatewayName,'-vng')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('aavpngwtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "gatewayName": {
                        "value": "[variables('Azure').gatewayName]"
                    },
                    "gatewaySku": {
                        "value": "[parameters('gatewaySku')]"
                    },
                    "vpnGatewayGeneration": {
                        "value": "[parameters('vpnGatewayGeneration')]"
                    },
                    "asn": {
                        "value": "[variables('Azure').asn]"
                    },
                    "vnetName": {
                        "value": "[concat(variables('Azure').name, '-vnet')]"
                    }
                }

            }
        },
        {
            "name": "vpnconnections",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('OnPrem').gatewayName,'-vng'))]",
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').gatewayName,'-vng'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vpnconnURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "sharedKey": {
                        "value": "[parameters('sharedKey')]"
                    }
                }
            }
        },
        {
            "name": "[variables('Azure').ergatewayName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('OnPrem').name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ergwtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "expressrouteGatewayName": {
                        "value": "[variables('Azure').ergatewayName]"
                    },
                    "vnetName": {
                        "value": "[concat(variables('Azure').name,'-vnet')]"
                    }
                }

            }
        },
        {
            "name": "erconnections",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('Azure').ergatewayName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('erconnURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "connectionName": {
                        "value": "Connection-to-ER-Circuit"
                    },
                    "expressrouteGatewayName": {
                        "value": "[variables('Azure').ergatewayName]"
                    },
                    "expressRouteCircuitID": {
                        "value": "[parameters('expressRouteCircuitID')]"
                    },
                    "UseAutorizationKey": {
                        "value": "[parameters('UseAutorizationKey')]"
                    },
                    "AutorizationKey": {
                        "value": "[parameters('AutorizationKey')]"
                    }
                }
            }
        },
        {
            "name": "routeServer",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('OnPrem').gatewayName,'-vng'))]",
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').gatewayName,'-vng'))]",
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').ergatewayName))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('routeServerURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "routeserverName": {
                        "value": "[variables('Azure').routeserverName]"
                    },
                    "vnetName": {
                        "value": "[concat(variables('Azure').name,'-vnet')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').routeserverSubnetName]"
                    },
                    "AllowBranchtoBranchTraffic": {
                        "value": "True"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('Azure').name,'-az-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(variables('Azure').name, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(variables('Azure').name,'-az-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('Azure').spoke1,'-az-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').spoke1,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke1subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(variables('Azure').spoke1, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(variables('Azure').spoke1,'-az-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('Azure').spoke2,'-az-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Azure').spoke2,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke2subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(variables('Azure').spoke2, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(variables('Azure').spoke2,'-az-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat(variables('OnPrem').name,'-az-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(variables('Onprem').name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('OnPrem').subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(variables('OnPrem').name, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(variables('OnPrem').name,'-az-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ]
}